name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual trigger

env:
  REGISTRY: ghcr.io

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Create lowercase image name
        id: image-name
        run: |
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "image-name=${{ env.REGISTRY }}/${REPO_LOWER}" >> $GITHUB_OUTPUT

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.image-name.outputs.image-name }}
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NEXT_PUBLIC_BACKEND_URL=${{ secrets.NEXT_PUBLIC_BACKEND_URL }}
            NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ALIBABA_HOST }}
          username: ${{ secrets.ALIBABA_USERNAME }}
          key: ${{ secrets.ALIBABA_SSH_KEY }}
          passphrase: ${{ secrets.ALIBABA_SSH_PASSPHRASE }}
          timeout: 8m
          command_timeout: 8m
          script: |
            echo "🚀 Starting deployment process..."
            
            # Define variables with lowercase conversion (required for Docker registry)
            REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
            REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
            IMAGE_NAME="ghcr.io/${REPO_OWNER}/${REPO_NAME}:latest"
            echo "📦 Target image: $IMAGE_NAME"
            
            # Login to GitHub Container Registry
            echo "🔐 Logging in to GitHub Container Registry..."
            echo "${{ secrets.CR_PAT }}" | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Pull the latest image
            echo "📥 Pulling latest Docker image..."
            sudo docker pull "$IMAGE_NAME"
            
            # Update systemd service configuration
            echo "⚙️ Updating systemd service..."
            sudo sed -i "s|aphommasone/switch-ev:latest|$IMAGE_NAME|g" /etc/systemd/system/switch-ev.service
            sudo sed -i "s|switch-ev:latest|$IMAGE_NAME|g" /etc/systemd/system/switch-ev.service
            sudo sed -i "s|ghcr.io/.*/.*:latest|$IMAGE_NAME|g" /etc/systemd/system/switch-ev.service
            sudo sed -i "s|ExecStartPre=/usr/bin/docker pull.*|# Image pulled from registry|g" /etc/systemd/system/switch-ev.service
            
            # Restart service
            echo "🔄 Restarting service..."
            sudo systemctl daemon-reload
            sudo systemctl restart switch-ev
            
            # Wait and check status
            echo "⏳ Waiting for service to start..."
            sleep 10
            
            echo "📊 Service status:"
            sudo systemctl status switch-ev --no-pager
            
            echo "🐳 Container status:"
            sudo docker ps -f name=switch-ev
            
            # Simple health check
            echo "🔍 Health check..."
            sleep 5
            curl -f http://localhost:4000 > /dev/null && echo "✅ Application is running!" || echo "⚠️ Application may need more time to start"
            
            # Cleanup old images
            echo "🧹 Cleaning up old images..."
            sudo docker image prune -f
            
            echo "🎉 Deployment completed!"
            echo "🌐 Application: https://test.switchuniversal.com/"
